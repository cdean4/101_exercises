{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red245\green245\blue245;\red246\green246\blue239;
\red53\green57\blue60;\red157\green101\blue255;\red152\green224\blue36;\red88\green209\blue235;\red0\green0\blue0;
\red52\green52\blue52;\red224\green213\blue97;\red38\green38\blue38;\red245\green245\blue245;\red88\green209\blue235;
\red53\green57\blue60;\red246\green246\blue239;\red224\green213\blue97;\red152\green224\blue36;\red244\green0\blue95;
}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c20000\c20000\c20000;\cssrgb\c96863\c96863\c96863;\cssrgb\c97255\c97255\c94902;
\cssrgb\c27059\c28627\c30196;\cssrgb\c68235\c50588\c100000;\cssrgb\c65098\c88627\c18039;\cssrgb\c40000\c85098\c93725;\csgenericrgb\c0\c0\c0;
\csgray\c26515;\cssrgb\c90196\c85882\c45490;\csgenericrgb\c14902\c14902\c14902;\csgenericrgb\c96078\c96078\c96078;\csgenericrgb\c34510\c81961\c92157;
\csgenericrgb\c20784\c22353\c23529;\csgenericrgb\c96471\c96471\c93725;\csgenericrgb\c87843\c83529\c38039;\csgenericrgb\c59608\c87843\c14118;\csgenericrgb\c95686\c0\c37255;
}
\margl1440\margr1440\vieww10800\viewh9540\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Medium_2\
\
Question 1\
\pard\pardeftab720\sl560\sa420\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Predict how the values and object ids will change throughout the flow of the code below:
\f0\b\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Answer\
\pard\pardeftab720\sl420\partightenfactor0

\f2\b0\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 a_outer = \cf6 \strokec6 42\cf4 \strokec4 \
  b_outer = \cf7 \strokec7 "forty two"\cf4 \strokec4 \
  c_outer = [\cf6 \strokec6 42\cf4 \strokec4 ]\
  d_outer = c_outer[\cf6 \strokec6 0\cf4 \strokec4 ]\
\
  a_outer_id = a_outer.object_id\
  b_outer_id = b_outer.object_id\
  c_outer_id = c_outer.object_id\
  d_outer_id = d_outer.object_id
\f0\b\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b0 \cf0 This is the first pass so each object id will be unique except that a_outer_id = d_outer_id\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 \
\pard\pardeftab720\sl420\partightenfactor0

\f2\b0\fs32 \cf6 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 1\cf4 \strokec4 .times \cf8 \strokec8 do\cf4 \strokec4 \
    a_outer_inner_id = a_outer.object_id\
    b_outer_inner_id = b_outer.object_id\
    c_outer_inner_id = c_outer.object_id\
    d_outer_inner_id = d_outer.object_id\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 This only prints the values for the original set of variables so no changes to ids yet.
\b \
\
\pard\pardeftab720\sl420\partightenfactor0

\f2\b0\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4     a_outer = \cf6 \strokec6 22\cf4 \strokec4 \
    b_outer = \cf7 \strokec7 "thirty three"\cf4 \strokec4 \
    c_outer = [\cf6 \strokec6 44\cf4 \strokec4 ]\
    d_outer = c_outer[\cf6 \strokec6 0\cf4 \strokec4 ]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 This set of variables will have all new ids.\
\
\pard\pardeftab720\sl420\partightenfactor0

\f2\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4     a_inner = a_outer\
    b_inner = b_outer\
    c_inner = c_outer\
    d_inner = c_inner[\cf6 \strokec6 0\cf4 \strokec4 ]\

\f0\b\fs24 \cf9 \cb10 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \

\f2\b0\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4     a_inner_id = a_inner.object_id\
    b_inner_id = b_inner.object_id\
    c_inner_id = c_inner.object_id\
    d_inner_id = d_inner.object_id\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 The inner ids will be different from the outer ids since the values changed (were reassigned)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 \
Question 2\
\pard\pardeftab720\sl560\sa420\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Let's look at object id's again from the perspective of a method call instead of a block.\
Here we haven't changed ANY of the code outside or inside of the block/method. We simply took the contents of the block from the previous practice problem and moved it to a method, to which we are passing all of our outer variables.\
Predict how the values and object ids will change throughout the flow of the code below:
\f0\b\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Answer\
\pard\pardeftab720\sl420\partightenfactor0

\f2\b0\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 a_outer = \cf6 \strokec6 42\cf4 \strokec4 \
  b_outer = \cf7 \strokec7 "forty two"\cf4 \strokec4 \
  c_outer = [\cf6 \strokec6 42\cf4 \strokec4 ]\
  d_outer = c_outer[\cf6 \strokec6 0\cf4 \strokec4 ]\
\
  a_outer_id = a_outer.object_id\
  b_outer_id = b_outer.object_id\
  c_outer_id = c_outer.object_id\
  d_outer_id = d_outer.object_id\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 Same result as with question 1 since this is the first pass.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 \
\pard\pardeftab720\sl420\partightenfactor0

\f2\b0\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4   \cf11 \strokec11 an_illustrative_method\cf4 \strokec4 (a_outer, b_outer, c_outer, d_outer, a_outer_id, b_outer_id, c_outer_id, d_outer_id)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 This wouldn\'92t affect the ids since its just passing the objects to the method.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b0 \cf0 Biggest takeaway here is that a method call will accept values as parameters so the names used for the parameters won\'92t affect their use outside of the method. Seems to me like inner scope vs outer scope stuff going on here. 
\b \
\
Question 3
\b0 \
\pard\pardeftab720\sl560\sa420\partightenfactor0

\f1\fs32 \cf12 \cb13 \expnd0\expndtw0\kerning0
Let's call a method, and pass both a string and an array as parameters and see how even though they are treated in the same way by Ruby, the results can be different.\
Study the following code and state what will be displayed...and why:\
\pard\pardeftab720\sl480\partightenfactor0

\f0 \cf14 \cb15 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 def\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9  \cf17 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 tricky_method\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 (a_string_param, an_array_param)\
  a_string_param += \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "rutabaga"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
  an_array_param << \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "rutabaga"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
\cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 end\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
\
my_string = \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "pumpkins"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
my_array = [\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "pumpkins"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 ]\
\cf17 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 tricky_method\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 (my_string, my_array)\
\
puts \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "My string looks like this now: \cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 #\{\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 my_string\cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \}\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
puts \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "My array looks like this now: \cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 #\{\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 my_array\cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \}\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "\cf16 \cb1 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \kerning1\expnd0\expndtw0 \shad0 \
\

\b Answer
\b0  \
my_string = \'93pumpkins\'94 since string_param did not mutate my_string so the original my_string remained intact.\
my_array = [\'93pumpkins\'94, \'93rutabaga\'94] was mutated by an_array_param because of the << operation so my_array was permanently changed.\
\

\b Question 4\
\pard\pardeftab720\sl560\sa420\partightenfactor0

\f1\b0\fs32 \cf12 \cb13 \expnd0\expndtw0\kerning0
To drive that last one home...let's turn the tables and have the string show a modified output, while the array thwarts the method's efforts to modify the caller's version of it.\
\pard\pardeftab720\sl480\partightenfactor0

\f0 \cf14 \cb15 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 def\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9  \cf17 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 tricky_method_two\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 (a_string_param, an_array_param)\
  a_string_param << \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 'rutabaga'\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
  an_array_param = [\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 'pumpkins'\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 , \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 'rutabaga'\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 ]\
\cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 end\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
\
my_string = \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "pumpkins"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
my_array = [\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "pumpkins"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 ]\
\cf17 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 tricky_method_two\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 (my_string, my_array)\
\
puts \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "My string looks like this now: \cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 #\{\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 my_string\cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \}\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
puts \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "My array looks like this now: \cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 #\{\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 my_array\cf19 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \}\cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "\cf16 \cb1 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \kerning1\expnd0\expndtw0 \shad0 \
\

\b Answer 
\b0 \
my_string = \'93pumpkinsrutabaga\'94 since the method mutated my_string.\
my_array = [\'91pumpkins\'92]  since the original my_array is not mutated by the method.\
\
\

\b Question 5\
\pard\pardeftab720\sl560\sa420\partightenfactor0

\f1\b0\fs32 \cf12 \cb13 \expnd0\expndtw0\kerning0
How could the unnecessary duplication in this method be removed?\
\pard\pardeftab720\sl480\partightenfactor0

\f0 \cf14 \cb15 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 def\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9  \cf17 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 color_valid\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 (color)\
  \cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 if\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9  color == \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "blue"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9  || color == \cf18 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 "green"\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
    \cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 true\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
  \cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 else\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
    \cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 false\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
  \cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 end\cf16 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
\cf14 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 end\cf16 \cb1 \shad\shadx0\shady-20\shadr0\shado76 \shadc9 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \kerning1\expnd0\expndtw0 \shad0 \

\b Answer
\b0 \
You can edit out the if/else/false portions of the code and just leave color == \'93blue\'94 || color == \'93green\'94 inside the method.\
}